import { Geist, Geist_Mono } from "next/font/google";
import { Montserrat } from 'next/font/google';
import { AuthProvider } from "./providers/AuthProvider";
import { ThemeProvider } from "next-themes";
import { Toaster } from "react-hot-toast";
import Header from "@/components/Header";
import Footer from "@/components/Footer";
import "./globals.css";
import { agendarEnvios } from '@/lib/services/agendarEnvios';

// Inicializar el servicio de envíos una sola vez al cargar la aplicación
if (typeof window === 'undefined') { // Solo ejecutar en el servidor
  agendarEnvios().catch(error => {
    console.error('Error al inicializar agendarEnvios:', error);
  });
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const monse = Montserrat({
  subsets: ['latin'],
  display: 'swap',
})

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "Turnos",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="es" className="scroll-smooth" suppressHydrationWarning>
      <head>
        {/* Font Awesome */}
        <link
          rel="stylesheet"
          href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
          integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
          crossOrigin="anonymous"
          referrerPolicy="no-referrer"
        />
        {/* PWA Manifest */}
        <link rel="manifest" href="/manifest.json" />
        <meta name="theme-color" content="#2563eb" />
        <link rel="apple-touch-icon" href="/logo.png" />
        <meta name="mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-capable" content="yes" />
        <meta name="apple-mobile-web-app-status-bar-style" content="default" />
        <meta name="apple-mobile-web-app-title" content="Consultorio" />
        <meta name="description" content="Gestión de turnos y pacientes para consultorio." />
        <script dangerouslySetInnerHTML={{
          __html: `if ('serviceWorker' in navigator) {
            window.addEventListener('load', function() {
              navigator.serviceWorker.register('/service-worker.js');
            });
          }`
        }} />
      </head>
      <body
        className={`${monse.className} ${geistMono.variable} antialiased min-h-screen flex flex-col bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100`}
      >
        <ThemeProvider attribute={"class"} enableSystem={true} defaultTheme="system">
        <AuthProvider>
            <Header />
            <div className="flex-grow">{children}</div>
            <Footer />
            <Toaster
              position="top-right"
              toastOptions={{
                duration: 4000,
                style: {
                  background: 'var(--toast-background, #333)',
                  color: 'var(--toast-color, #fff)',
                },
                success: {
                  style: {
                    background: 'var(--toast-success-background, #22c55e)',
                  },
                },
                error: {
                  style: {
                    background: 'var(--toast-error-background, #ef4444)',
                  },
                },
              }}
            />
        </AuthProvider>
          </ThemeProvider>
      </body>
    </html>
  );
}
